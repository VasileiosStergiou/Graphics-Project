//GEORGOULAS DIMOSTHENIS 4039
//STERGIOU BASILEIOS 4300

#version 330 core

// Input vertex data, different for all executions of this shader.
//location 0 for vertices
layout(location = 0) in vec3 vertexPosition_modelspace;

//location 1 for colors
layout(location = 1) in vec4 vertexColor;

//location 2 for texture vertices
layout(location = 2) in vec2 aTexCoord;

// Output data ; will be interpolated for each fragment.
out vec4 fragmentColor;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

//Send texture vertices to fragment shader
out vec2 TexCoord;

void main(){	

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);

	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	fragmentColor = vertexColor;
	TexCoord = aTexCoord;
}

